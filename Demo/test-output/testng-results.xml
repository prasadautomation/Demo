<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="24086" started-at="2020-08-08T20:05:22 IST" finished-at="2020-08-08T20:05:46 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="24086" started-at="2020-08-08T20:05:22 IST" finished-at="2020-08-08T20:05:46 IST">
      <class name="com.demo.testcases.ManagePayerAddPayerTest">
        <test-method status="PASS" signature="loadConfig()[pri:0, instance:com.demo.testcases.ManagePayerAddPayerTest@17579e0f]" name="loadConfig" is-config="true" duration-ms="249" started-at="2020-08-08T20:05:22 IST" finished-at="2020-08-08T20:05:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadConfig -->
        <test-method status="PASS" signature="clickonLoginTest(java.lang.String, java.lang.String)[pri:1, instance:com.demo.testcases.ManagePayerAddPayerTest@17579e0f]" name="clickonLoginTest" duration-ms="23052" started-at="2020-08-08T20:05:23 IST" data-provider="credentials" finished-at="2020-08-08T20:05:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[prasad@zenwork.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Prasad@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickonLoginTest -->
        <test-method status="FAIL" signature="AddPayerTest(java.util.HashMap)[pri:2, instance:com.demo.testcases.ManagePayerAddPayerTest@17579e0f]" name="AddPayerTest" duration-ms="299" started-at="2020-08-08T20:05:46 IST" data-provider="addPayer" finished-at="2020-08-08T20:05:46 IST">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.demo.testcases.ManagePayerAddPayerTest.AddPayerTest(java.util.HashMap) throws java.lang.Throwable] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: AddPayerTest([Parameter{index=0, type=java.util.HashMap, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Business,(java.lang.String) 8.89574637E8,(java.lang.String) ,(java.lang.String) ,(java.lang.String) ,(java.lang.String) ,(java.lang.String) TestOne,(java.lang.String) us,(java.lang.String) ,(java.lang.String) usa,(java.lang.String) City,(java.lang.String) Alabama,(java.lang.String) 35010.0,(java.lang.String) United State Of America,(java.lang.String) ,(java.lang.String) 1.2345679E8,(java.lang.String) prasad@zenwork.com,(java.lang.String) ,(java.lang.String) ,(java.lang.String) 12345.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.demo.testcases.ManagePayerAddPayerTest.AddPayerTest(java.util.HashMap) throws java.lang.Throwable] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: AddPayerTest([Parameter{index=0, type=java.util.HashMap, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Business,(java.lang.String) 8.89574637E8,(java.lang.String) ,(java.lang.String) ,(java.lang.String) ,(java.lang.String) ,(java.lang.String) TestOne,(java.lang.String) us,(java.lang.String) ,(java.lang.String) usa,(java.lang.String) City,(java.lang.String) Alabama,(java.lang.String) 35010.0,(java.lang.String) United State Of America,(java.lang.String) ,(java.lang.String) 1.2345679E8,(java.lang.String) prasad@zenwork.com,(java.lang.String) ,(java.lang.String) ,(java.lang.String) 12345.0]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:909)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPayerTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.demo.testcases.ManagePayerAddPayerTest@17579e0f]" name="afterSuite" is-config="true" duration-ms="4" started-at="2020-08-08T20:05:46 IST" finished-at="2020-08-08T20:05:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.demo.testcases.ManagePayerAddPayerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
